AWSTemplateFormatVersion: '2010-09-09'
Description: Configuration for Streamlit development environment with DynamoDB

Parameters:
  KeyName:
    Type: String
    Description: Name of the SSH key pair for EC2 access
  InstanceType:
    Type: String
    Default: t2.micro
    Description: EC2 instance type
    AllowedValues:
      - t2.micro
      - t2.small
      - t3.micro
      - t3.small
  OpenAIAPIKey:
    Type: String
    Description: OpenAI API Key for the application
    NoEcho: true
  PineconeAPIKey:
    Type: String
    Description: Pinecone API Key for the application
    NoEcho: true

Resources:
  # VPC
  DevVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: dev-vpc

  # Subnets
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DevVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: dev-public-subnet

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref DevVPC
      InternetGatewayId: !Ref InternetGateway

  # Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref DevVPC

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  # Security Group for EC2
  DevSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EC2 instance
      VpcId: !Ref DevVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8501
          ToPort: 8501
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  EC2IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: DynamoDBAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:ListTables
                  - dynamodb:Query
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/dev_streamlit_table"

  # IAM Instance Profile for EC2
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2IAMRole

  # EC2 Instance
  DevInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref DevSecurityGroup
      SubnetId: !Ref PublicSubnet
      ImageId: ami-0c80e2b6ccb9ad6d1  # Amazon Linux 2023 AMI
      IamInstanceProfile: !Ref EC2InstanceProfile
      UserData:
        Fn::Base64:
          Fn::Sub: |
            #!/bin/bash
            sudo yum update -y
            # Install Git
            sudo yum install -y git
            # Install Python 3.11
            sudo dnf install python3.11 -y
            # Configure Python 3.11 as default
            sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 2
            sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1
            sudo update-alternatives --set python3 /usr/bin/python3.11
            # Ensure pip is installed for Python 3.11 and upgrade it
            sudo python3.11 -m ensurepip --upgrade
            sudo python3.11 -m pip install --upgrade pip
            # Clone and set up the application
            cd /home/ec2-user
            git clone https://github.com/talesitf/cautious-enigma.git streamlit_app
            cd streamlit_app
            git checkout dev
            sudo git config --global --add safe.directory /home/ec2-user/streamlit_app
            # Install dependencies from requirements.txt using pip for Python 3.11
            python3.11 -m pip install -r requirements.txt
            # Set environment variables
            echo "DYNAMODB_TABLE=dev_streamlit_table" | sudo tee -a /etc/environment
            echo "APP_ENV=dev" | sudo tee -a /etc/environment
            echo "OPENAI_API_KEY=${OpenAIAPIKey}" | sudo tee -a /etc/environment
            echo "PINECONE_API_KEY=${PineconeAPIKey}" | sudo tee -a /etc/environment
            # Start the Streamlit application
            nohup python3.11 -m streamlit run app.py --server.port 8501 --server.address 0.0.0.0 > streamlit.log 2>&1 &

  # DynamoDB Table
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: dev_streamlit_table
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      Tags:
        - Key: Environment
          Value: Dev

Outputs:
  InstancePublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt DevInstance.PublicIp

  DynamoDBTableName:
    Description: Name of the DynamoDB table
    Value: !Ref DynamoDBTable
